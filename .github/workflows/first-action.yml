---
name: Stians first action
run-name: ${{ github.actor }} testing a customized action
on:
  - push
jobs:
  Walla-Walla-Bing-Bang:
    runs-on: self-hosted
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }}
          event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by
          GitHub!"
      - run: echo 'üîé The name of your branch is ${{ github.ref }} and your repository
          is ${{ github.repository }} faktisk '
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the
          runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."
      - name: Create backup of boot folder
        run: |
          $workingdirectory = Get-Location
          $startTime = Get-Date -Format "yyyy-MM-ddThhmmss"
          $logfile =  "$(Get-Location)\Update-${startTime}.log"
          function Write-Logfile {
            param(
             [Parameter(Position=0, ValueFromPipeline=$true)]
             [String]$Message
            )

            $date = Get-Date -Format "o"
            $Message = "${date}: ${Message}"
            Write-Host "${Message}"
            "${Message}"| Out-File -FilePath "$logfile" -Append
          }


          function Copy-Files {
            param(        
              [String]$Source,
              [String]$Destination
            )

            Copy-Item -Path "$Source" -Destination "$Destination" -Recurse -Force
            Get-ChildItem -Path "$Source" -Recurse | ForEach-Object { Write-Logfile "Copied '$($_.FullName)' to '$($_.FullName.Replace("$($Source.Replace('*', ''))", "$Destination\"))'"}
          }


          Write-Logfile "Backup old boot folder,.."

          Copy-Files C:\Program Files (x86)\Beckhoff\TwinCAT\3.1\Boot\* C:\Program Files (x86)\Beckhoff\TwinCAT\3.1\Boot.backup

          Write-Logfile DONE!
